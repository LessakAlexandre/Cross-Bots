Explicação do código
1. Quadrado magico
	De início vemos a criação da matriz utilizando a função “criarmatriz” na qual precisa de um valor para criar-se uma matriz quadrada usando-se de um vetor o qual é uma é uma lista podemos inserir esse vetor dentro de outra lista com o método “append” formando a matriz. Logo após isso temos outra função nomeada como” checagem” a qual tem o papel de verificar se a soma de linhas, colunas e diagonais possuem o mesmo valor. Depois de criado essas duas funções entramos na área principal no qual temos operações dedicas para somar cada linha e coluna como um método que gosto de chamar de varredura o qual vai item por item e conforme a linha e coluna que está são atribuídos a diferentes variáveis. Por fim chamamos a função checagem que retorna um valor booleano.
	Algo que que chamou a atenção nesse código é como devemos atribuir os valores a duas ou mais variáveis, por exemplo o primeiro item da matriz deve ser somado com a diagonal principal, primeira linha e primeira coluna e por isso devemos ter cuidado para não excluir este item de todos os possíveis encaixes.
2. Itinerário de viagem 
	Neste código reaproveitei a função do exercício do quadrado mágico apenas com a diferença de solicitar uma entrada apenas quando as cidades de destino forem diferentes entre elas, por exemplo quando for da cidade 1 para cidade 3, mas não da cidade 1 para a cidade 1 que por lógica sabemos que será 0(Algo que alterei neste código do sugerido por vocês é que não existe cidade 0 apenas cidade 1 para frente, claro que isso não passa de estética). Com isso, a criação da função “viagens” para calcular quantas viagens foram feitas e a soma entre todos os percursos solicitamos ao usuário qual cidade ele deseja ir começando a partir da 1, lembrando também que o programa não permite que a cidade n seja maior do que as informadas. Por fim, quando selecionamos a cidade de início, ou seja, a cidade 1 concluímos um dos nossos itinerários e caso chegue a zero o programa se encerra e apresenta a distância que percorremos
	O ponto chave do código é saber localizar na matriz as distâncias de uma cidade para outra e saber a hora atribuir a uma variável a outra aja em mente que após sairmos do ponto de início não contamos com a mesma distância logo caso seja uma variável alterada antes de outra pode-se gerar um problema no código.

